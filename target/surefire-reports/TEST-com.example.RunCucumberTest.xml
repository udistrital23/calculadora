<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.example.RunCucumberTest" time="1.467" tests="20" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/workspaces/calculadora/target/test-classes:/workspaces/calculadora/target/classes:/home/vscode/.m2/repository/io/cucumber/cucumber-java/7.30.0/cucumber-java-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-core/7.30.0/cucumber-core-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-gherkin/7.30.0/cucumber-gherkin-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.30.0/cucumber-gherkin-messages-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/gherkin/35.1.0/gherkin-35.1.0.jar:/home/vscode/.m2/repository/org/assertj/assertj-core/3.27.5/assertj-core-3.27.5.jar:/home/vscode/.m2/repository/net/bytebuddy/byte-buddy/1.17.7/byte-buddy-1.17.7.jar:/home/vscode/.m2/repository/io/cucumber/messages/29.0.1/messages-29.0.1.jar:/home/vscode/.m2/repository/io/cucumber/pretty-formatter/2.3.0/pretty-formatter-2.3.0.jar:/home/vscode/.m2/repository/io/cucumber/query/14.6.0/query-14.6.0.jar:/home/vscode/.m2/repository/io/cucumber/teamcity-formatter/0.1.1/teamcity-formatter-0.1.1.jar:/home/vscode/.m2/repository/io/cucumber/testng-xml-formatter/0.6.0/testng-xml-formatter-0.6.0.jar:/home/vscode/.m2/repository/io/cucumber/tag-expressions/6.1.2/tag-expressions-6.1.2.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-expressions/18.0.1/cucumber-expressions-18.0.1.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-json-formatter/0.2.1/cucumber-json-formatter-0.2.1.jar:/home/vscode/.m2/repository/io/cucumber/datatable/7.30.0/datatable-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-plugin/7.30.0/cucumber-plugin-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/docstring/7.30.0/docstring-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/html-formatter/21.15.1/html-formatter-21.15.1.jar:/home/vscode/.m2/repository/io/cucumber/junit-xml-formatter/0.9.0/junit-xml-formatter-0.9.0.jar:/home/vscode/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/home/vscode/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.30.0/cucumber-junit-platform-engine-7.30.0.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-engine/1.14.0/junit-platform-engine-1.14.0.jar:/home/vscode/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-commons/1.14.0/junit-platform-commons-1.14.0.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite/1.10.2/junit-platform-suite-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite-api/1.10.2/junit-platform-suite-api-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.10.2/junit-platform-suite-engine-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.10.2/junit-platform-suite-commons-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.2/junit-platform-launcher-1.10.2.jar:"/>
    <property name="java.vm.vendor" value="Microsoft"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://www.microsoft.com"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/msopenjdk-current/lib"/>
    <property name="sun.java.command" value="/workspaces/calculadora/target/surefire/surefirebooter-20251031035424290_3.jar /workspaces/calculadora/target/surefire 2025-10-31T03-54-24_237-jvmRun1 surefire-20251031035424290_1tmp surefire_0-20251031035424290_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/workspaces/calculadora/target/test-classes:/workspaces/calculadora/target/classes:/home/vscode/.m2/repository/io/cucumber/cucumber-java/7.30.0/cucumber-java-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-core/7.30.0/cucumber-core-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-gherkin/7.30.0/cucumber-gherkin-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.30.0/cucumber-gherkin-messages-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/gherkin/35.1.0/gherkin-35.1.0.jar:/home/vscode/.m2/repository/org/assertj/assertj-core/3.27.5/assertj-core-3.27.5.jar:/home/vscode/.m2/repository/net/bytebuddy/byte-buddy/1.17.7/byte-buddy-1.17.7.jar:/home/vscode/.m2/repository/io/cucumber/messages/29.0.1/messages-29.0.1.jar:/home/vscode/.m2/repository/io/cucumber/pretty-formatter/2.3.0/pretty-formatter-2.3.0.jar:/home/vscode/.m2/repository/io/cucumber/query/14.6.0/query-14.6.0.jar:/home/vscode/.m2/repository/io/cucumber/teamcity-formatter/0.1.1/teamcity-formatter-0.1.1.jar:/home/vscode/.m2/repository/io/cucumber/testng-xml-formatter/0.6.0/testng-xml-formatter-0.6.0.jar:/home/vscode/.m2/repository/io/cucumber/tag-expressions/6.1.2/tag-expressions-6.1.2.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-expressions/18.0.1/cucumber-expressions-18.0.1.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-json-formatter/0.2.1/cucumber-json-formatter-0.2.1.jar:/home/vscode/.m2/repository/io/cucumber/datatable/7.30.0/datatable-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-plugin/7.30.0/cucumber-plugin-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/docstring/7.30.0/docstring-7.30.0.jar:/home/vscode/.m2/repository/io/cucumber/html-formatter/21.15.1/html-formatter-21.15.1.jar:/home/vscode/.m2/repository/io/cucumber/junit-xml-formatter/0.9.0/junit-xml-formatter-0.9.0.jar:/home/vscode/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/home/vscode/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/vscode/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.30.0/cucumber-junit-platform-engine-7.30.0.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-engine/1.14.0/junit-platform-engine-1.14.0.jar:/home/vscode/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-commons/1.14.0/junit-platform-commons-1.14.0.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/home/vscode/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite/1.10.2/junit-platform-suite-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite-api/1.10.2/junit-platform-suite-api-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.10.2/junit-platform-suite-engine-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.10.2/junit-platform-suite-commons-1.10.2.jar:/home/vscode/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.2/junit-platform-launcher-1.10.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/vscode"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="/usr/lib/jvm/msopenjdk-current"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/workspaces/calculadora"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/workspaces/calculadora/target/surefire/surefirebooter-20251031035424290_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="cucumber.plugin" value="pretty,html:target/cucumber-report.html,json:target/cucumber.json"/>
    <property name="java.runtime.version" value="21.0.8+9-LTS"/>
    <property name="user.name" value="vscode"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.10.14-linuxkit"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Microsoft-11933219"/>
    <property name="localRepository" value="/home/vscode/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/microsoft/openjdk/issues"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="21.0.8"/>
    <property name="user.dir" value="/workspaces/calculadora"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Microsoft"/>
    <property name="java.vm.version" value="21.0.8+9-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="División Exitosa en Bases Mixtas" classname="División de dos valores ingresados" time="0.063">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m División Exitosa en Bases Mixtas        &amp#27;[90m# classpath:features/division.feature:7&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere dividir dos números&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_dividir()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel dividendo es &amp#27;[1m"32"&amp#27;[22m en base &amp#27;[1m4&amp#27;[22m&amp#27;[39m          &amp#27;[90m# com.example.steps.CalculadoraSteps.el_dividendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel divisor es &amp#27;[1m"7"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                 &amp#27;[90m# com.example.steps.CalculadoraSteps.el_divisor_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m2&amp#27;[22m&amp#27;[39m               &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mel resultado mostrado debe ser &amp#27;[1m"10"&amp#27;[22m&amp#27;[39m   &amp#27;[90m# com.example.steps.CalculadoraSteps.el_resultado_mostrado_debe_ser(java.lang.String)&amp#27;[39m
]]></system-out>
    <system-err><![CDATA[Oct 31, 2025 3:54:25 AM io.cucumber.core.resource.ClasspathScanner safelyLoadClass
WARNING: Failed to load class 'net.bytebuddy.dynamic.loading.ClassInjector$UsingJna$Dispatcher$Windows32BitFunctionMapper'.
By default Cucumber scans the entire classpath for step definitions.
You can restrict this by configuring the glue path.

Examples:
 - @CucumberOptions(glue = "com.example.application")
 - @ConfigurationParameter(key = GLUE_PROPERTY_NAME, value = "com.example.application") - src/test/resources/junit-platform.properties   cucumber.glue=com.example.application
 - src/test/resources/cucumber.properties         cucumber.glue=com.example.application

java.lang.NoClassDefFoundError: com/sun/jna/FunctionMapper
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at io.cucumber.core.resource.ClasspathScanner.safelyLoadClass(ClasspathScanner.java:107)
	at io.cucumber.core.resource.ClasspathScanner.lambda$processClassFiles$5(ClasspathScanner.java:99)
	at io.cucumber.core.resource.PathScanner$ResourceFileVisitor.visitFile(PathScanner.java:82)
	at io.cucumber.core.resource.PathScanner$ResourceFileVisitor.visitFile(PathScanner.java:67)
	at java.base/java.nio.file.Files.walkFileTree(Files.java:2799)
	at io.cucumber.core.resource.PathScanner.findResourcesForPath(PathScanner.java:61)
	at io.cucumber.core.resource.PathScanner.findResourcesForPath(PathScanner.java:54)
	at io.cucumber.core.resource.PathScanner.findResourcesForUri(PathScanner.java:34)
	at io.cucumber.core.resource.ClasspathScanner.findClassesForUri(ClasspathScanner.java:73)
	at io.cucumber.core.resource.ClasspathScanner.lambda$findClassesForUris$3(ClasspathScanner.java:65)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at io.cucumber.core.resource.ClasspathScanner.findClassesForUris(ClasspathScanner.java:68)
	at io.cucumber.core.resource.ClasspathScanner.scanForClassesInPackage(ClasspathScanner.java:52)
	at io.cucumber.core.resource.ClasspathScanner.scanForClassesInPackage(ClasspathScanner.java:115)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:41)
	at io.cucumber.core.runner.Runner.<init>(Runner.java:60)
	at io.cucumber.core.runtime.SingletonRunnerSupplier.createRunner(SingletonRunnerSupplier.java:44)
	at io.cucumber.core.runtime.SingletonRunnerSupplier.get(SingletonRunnerSupplier.java:35)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:35)
	at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:140)
	at io.cucumber.core.runtime.CucumberExecutionContext.runBeforeAllHooks(CucumberExecutionContext.java:92)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runBeforeAllHooks(CucumberEngineExecutionContext.java:104)
	at io.cucumber.junit.platform.engine.CucumberEngineDescriptor.ifChildren(CucumberEngineDescriptor.java:66)
	at io.cucumber.junit.platform.engine.CucumberEngineDescriptor.before(CucumberEngineDescriptor.java:41)
	at io.cucumber.junit.platform.engine.CucumberEngineDescriptor.before(CucumberEngineDescriptor.java:13)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:154)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:147)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:145)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:101)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:76)
	at org.junit.platform.suite.engine.SuiteLauncher.execute(SuiteLauncher.java:63)
	at org.junit.platform.suite.engine.SuiteTestDescriptor.execute(SuiteTestDescriptor.java:128)
	at org.junit.platform.suite.engine.SuiteTestEngine.lambda$execute$0(SuiteTestEngine.java:73)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.platform.suite.engine.SuiteTestEngine.execute(SuiteTestEngine.java:73)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.ClassNotFoundException: com.sun.jna.FunctionMapper
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	... 96 more

Oct 31, 2025 3:54:25 AM io.cucumber.core.resource.ClasspathScanner safelyLoadClass
WARNING: Failed to load class 'net.bytebuddy.dynamic.loading.ClassInjector$UsingJna$Dispatcher$Jvm'.
By default Cucumber scans the entire classpath for step definitions.
You can restrict this by configuring the glue path.

Examples:
 - @CucumberOptions(glue = "com.example.application")
 - @ConfigurationParameter(key = GLUE_PROPERTY_NAME, value = "com.example.application") - src/test/resources/junit-platform.properties   cucumber.glue=com.example.application
 - src/test/resources/cucumber.properties         cucumber.glue=com.example.application

java.lang.NoClassDefFoundError: com/sun/jna/Library
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at io.cucumber.core.resource.ClasspathScanner.safelyLoadClass(ClasspathScanner.java:107)
	at io.cucumber.core.resource.ClasspathScanner.lambda$processClassFiles$5(ClasspathScanner.java:99)
	at io.cucumber.core.resource.PathScanner$ResourceFileVisitor.visitFile(PathScanner.java:82)
	at io.cucumber.core.resource.PathScanner$ResourceFileVisitor.visitFile(PathScanner.java:67)
	at java.base/java.nio.file.Files.walkFileTree(Files.java:2799)
	at io.cucumber.core.resource.PathScanner.findResourcesForPath(PathScanner.java:61)
	at io.cucumber.core.resource.PathScanner.findResourcesForPath(PathScanner.java:54)
	at io.cucumber.core.resource.PathScanner.findResourcesForUri(PathScanner.java:34)
	at io.cucumber.core.resource.ClasspathScanner.findClassesForUri(ClasspathScanner.java:73)
	at io.cucumber.core.resource.ClasspathScanner.lambda$findClassesForUris$3(ClasspathScanner.java:65)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at io.cucumber.core.resource.ClasspathScanner.findClassesForUris(ClasspathScanner.java:68)
	at io.cucumber.core.resource.ClasspathScanner.scanForClassesInPackage(ClasspathScanner.java:52)
	at io.cucumber.core.resource.ClasspathScanner.scanForClassesInPackage(ClasspathScanner.java:115)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:41)
	at io.cucumber.core.runner.Runner.<init>(Runner.java:60)
	at io.cucumber.core.runtime.SingletonRunnerSupplier.createRunner(SingletonRunnerSupplier.java:44)
	at io.cucumber.core.runtime.SingletonRunnerSupplier.get(SingletonRunnerSupplier.java:35)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:35)
	at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:140)
	at io.cucumber.core.runtime.CucumberExecutionContext.runBeforeAllHooks(CucumberExecutionContext.java:92)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runBeforeAllHooks(CucumberEngineExecutionContext.java:104)
	at io.cucumber.junit.platform.engine.CucumberEngineDescriptor.ifChildren(CucumberEngineDescriptor.java:66)
	at io.cucumber.junit.platform.engine.CucumberEngineDescriptor.before(CucumberEngineDescriptor.java:41)
	at io.cucumber.junit.platform.engine.CucumberEngineDescriptor.before(CucumberEngineDescriptor.java:13)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:154)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:147)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:145)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:101)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:76)
	at org.junit.platform.suite.engine.SuiteLauncher.execute(SuiteLauncher.java:63)
	at org.junit.platform.suite.engine.SuiteTestDescriptor.execute(SuiteTestDescriptor.java:128)
	at org.junit.platform.suite.engine.SuiteTestEngine.lambda$execute$0(SuiteTestEngine.java:73)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.platform.suite.engine.SuiteTestEngine.execute(SuiteTestEngine.java:73)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.ClassNotFoundException: com.sun.jna.Library
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	... 96 more

]]></system-err>
  </testcase>
  <testcase name="Rechazo por División por Cero" classname="División de dos valores ingresados" time="0.004">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por División por Cero                                          &amp#27;[90m# classpath:features/division.feature:14&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere dividir dos números&amp#27;[39m                                &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_dividir()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel dividendo es &amp#27;[1m"100"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                       &amp#27;[90m# com.example.steps.CalculadoraSteps.el_dividendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel divisor es &amp#27;[1m"0"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                &amp#27;[90m# com.example.steps.CalculadoraSteps.el_divisor_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m8&amp#27;[22m&amp#27;[39m                                              &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"No es posible dividir por cero"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por Base de Divisor Fuera de Rango" classname="División de dos valores ingresados" time="0.005">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por Base de Divisor Fuera de Rango                                        &amp#27;[90m# classpath:features/division.feature:21&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere dividir dos números&amp#27;[39m                                           &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_dividir()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel dividendo es &amp#27;[1m"52"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                   &amp#27;[90m# com.example.steps.CalculadoraSteps.el_dividendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel divisor es &amp#27;[1m"19"&amp#27;[22m en base &amp#27;[1m12&amp#27;[22m&amp#27;[39m                                                          &amp#27;[90m# com.example.steps.CalculadoraSteps.el_divisor_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base debe estar en el rango de 2 a 10."&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por Dígito No Válido para la Base" classname="División de dos valores ingresados" time="0.013">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por Dígito No Válido para la Base                                         &amp#27;[90m# classpath:features/division.feature:28&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere dividir dos números&amp#27;[39m                                           &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_dividir()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel dividendo es &amp#27;[1m"60"&amp#27;[22m en base &amp#27;[1m5&amp#27;[22m&amp#27;[39m                                                    &amp#27;[90m# com.example.steps.CalculadoraSteps.el_dividendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel divisor es &amp#27;[1m"10"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m                                                           &amp#27;[90m# com.example.steps.CalculadoraSteps.el_divisor_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"El dígito '6' no es válido para la base 5"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por Base de Salida Fuera de Rango" classname="División de dos valores ingresados" time="0.008">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por Base de Salida Fuera de Rango                                                &amp#27;[90m# classpath:features/division.feature:35&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere dividir dos números&amp#27;[39m                                                  &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_dividir()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel dividendo es &amp#27;[1m"18"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                          &amp#27;[90m# com.example.steps.CalculadoraSteps.el_dividendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel divisor es &amp#27;[1m"12"&amp#27;[22m en base &amp#27;[1m7&amp#27;[22m&amp#27;[39m                                                                  &amp#27;[90m# com.example.steps.CalculadoraSteps.el_divisor_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m12&amp#27;[22m&amp#27;[39m                                                               &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base de salida 12 está fuera del rango [2-10]"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Multiplicación Exitosa en Bases Mixtas" classname="Multiplicación de dos valores ingresados" time="0.004">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Multiplicación Exitosa en Bases Mixtas      &amp#27;[90m# classpath:features/multplicacion.feature:7&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere multiplicar dos números&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_multiplicar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel factor 1 es &amp#27;[1m"10"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m               &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel factor 2 es &amp#27;[1m"3"&amp#27;[22m en base &amp#27;[1m4&amp#27;[22m&amp#27;[39m                     &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                  &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mel resultado mostrado debe ser &amp#27;[1m"6"&amp#27;[22m&amp#27;[39m        &amp#27;[90m# com.example.steps.CalculadoraSteps.el_resultado_mostrado_debe_ser(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Multiplicación Simple en Base 5" classname="Multiplicación de dos valores ingresados" time="0.128">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Multiplicación Simple en Base 5             &amp#27;[90m# classpath:features/multplicacion.feature:14&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere multiplicar dos números&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_multiplicar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel factor 1 es &amp#27;[1m"4"&amp#27;[22m en base &amp#27;[1m5&amp#27;[22m&amp#27;[39m                &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel factor 2 es &amp#27;[1m"3"&amp#27;[22m en base &amp#27;[1m5&amp#27;[22m&amp#27;[39m                     &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m5&amp#27;[22m&amp#27;[39m                   &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mel resultado mostrado debe ser &amp#27;[1m"22"&amp#27;[22m&amp#27;[39m       &amp#27;[90m# com.example.steps.CalculadoraSteps.el_resultado_mostrado_debe_ser(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por Base de Factor 2 Fuera de Rango" classname="Multiplicación de dos valores ingresados" time="0.021">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por Base de Factor 2 Fuera de Rango                                       &amp#27;[90m# classpath:features/multplicacion.feature:21&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere multiplicar dos números&amp#27;[39m                                       &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_multiplicar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel factor 1 es &amp#27;[1m"100"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                   &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel factor 2 es &amp#27;[1m"50"&amp#27;[22m en base &amp#27;[1m1&amp#27;[22m&amp#27;[39m                                                          &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base debe estar en el rango de 2 a 10."&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por Dígito No Válido para la Base" classname="Multiplicación de dos valores ingresados" time="0.008">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por Dígito No Válido para la Base                                         &amp#27;[90m# classpath:features/multplicacion.feature:28&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere multiplicar dos números&amp#27;[39m                                       &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_multiplicar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel factor 1 es &amp#27;[1m"63"&amp#27;[22m en base &amp#27;[1m5&amp#27;[22m&amp#27;[39m                                                     &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel factor 2 es &amp#27;[1m"10"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m                                                          &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"El dígito '6' no es válido para la base 5"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por Base de Salida Fuera de Rango" classname="Multiplicación de dos valores ingresados" time="0.009">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por Base de Salida Fuera de Rango                                                &amp#27;[90m# classpath:features/multplicacion.feature:35&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere multiplicar dos números&amp#27;[39m                                              &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_multiplicar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel factor 1 es &amp#27;[1m"19"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                           &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel factor 2 es &amp#27;[1m"20"&amp#27;[22m en base &amp#27;[1m7&amp#27;[22m&amp#27;[39m                                                                 &amp#27;[90m# com.example.steps.CalculadoraSteps.el_factor2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m12&amp#27;[22m&amp#27;[39m                                                               &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base de salida 12 está fuera del rango [2-10]"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Resta exitosa en bases mixtas" classname="Resta de dos valores ingresados" time="0.008">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Resta exitosa en bases mixtas          &amp#27;[90m# classpath:features/resta.feature:7&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere restar dos números&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_restar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel minuendo es &amp#27;[1m"100"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m         &amp#27;[90m# com.example.steps.CalculadoraSteps.el_minuendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel sustraendo es &amp#27;[1m"1"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m             &amp#27;[90m# com.example.steps.CalculadoraSteps.el_sustraendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m2&amp#27;[22m&amp#27;[39m              &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mel resultado mostrado debe ser &amp#27;[1m"11"&amp#27;[22m&amp#27;[39m  &amp#27;[90m# com.example.steps.CalculadoraSteps.el_resultado_mostrado_debe_ser(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Resta simple en base 8" classname="Resta de dos valores ingresados" time="0.005">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Resta simple en base 8                 &amp#27;[90m# classpath:features/resta.feature:14&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere restar dos números&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_restar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel minuendo es &amp#27;[1m"40"&amp#27;[22m en base &amp#27;[1m8&amp#27;[22m&amp#27;[39m          &amp#27;[90m# com.example.steps.CalculadoraSteps.el_minuendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel sustraendo es &amp#27;[1m"20"&amp#27;[22m en base &amp#27;[1m8&amp#27;[22m&amp#27;[39m             &amp#27;[90m# com.example.steps.CalculadoraSteps.el_sustraendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m8&amp#27;[22m&amp#27;[39m              &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mel resultado mostrado debe ser &amp#27;[1m"20"&amp#27;[22m&amp#27;[39m  &amp#27;[90m# com.example.steps.CalculadoraSteps.el_resultado_mostrado_debe_ser(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por base del sustraendo fuera de rango" classname="Resta de dos valores ingresados" time="0.004">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por base del sustraendo fuera de rango                                    &amp#27;[90m# classpath:features/resta.feature:21&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere restar dos números&amp#27;[39m                                            &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_restar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel minuendo es &amp#27;[1m"100"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                   &amp#27;[90m# com.example.steps.CalculadoraSteps.el_minuendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel sustraendo es &amp#27;[1m"50"&amp#27;[22m en base &amp#27;[1m1&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.el_sustraendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base debe estar en el rango de 2 a 10."&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por dígito no válido para la base" classname="Resta de dos valores ingresados" time="0.005">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por dígito no válido para la base                                         &amp#27;[90m# classpath:features/resta.feature:28&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere restar dos números&amp#27;[39m                                            &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_restar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel minuendo es &amp#27;[1m"23"&amp#27;[22m en base &amp#27;[1m3&amp#27;[22m&amp#27;[39m                                                     &amp#27;[90m# com.example.steps.CalculadoraSteps.el_minuendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel sustraendo es &amp#27;[1m"10"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.el_sustraendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"El dígito '3' no es válido para la base 3"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por base de salida fuera de rango" classname="Resta de dos valores ingresados" time="0.006">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por base de salida fuera de rango                                                &amp#27;[90m# classpath:features/resta.feature:35&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere restar dos números&amp#27;[39m                                                   &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_restar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel minuendo es &amp#27;[1m"19"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                           &amp#27;[90m# com.example.steps.CalculadoraSteps.el_minuendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel sustraendo es &amp#27;[1m"20"&amp#27;[22m en base &amp#27;[1m7&amp#27;[22m&amp#27;[39m                                                               &amp#27;[90m# com.example.steps.CalculadoraSteps.el_sustraendo_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m13&amp#27;[22m&amp#27;[39m                                                               &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base de salida 13 está fuera del rango [2-10]"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Suma exitosa en bases mixtas con resultado en base diferente" classname="Suma de dos valores ingresados" time="0.005">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Suma exitosa en bases mixtas con resultado en base diferente &amp#27;[90m# classpath:features/suma.feature:7&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere sumar dos números&amp#27;[39m                        &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_sumar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel número 1 es &amp#27;[1m"1010"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m                              &amp#27;[90m# com.example.steps.CalculadoraSteps.numero1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel número 2 es &amp#27;[1m"10"&amp#27;[22m en base &amp#27;[1m8&amp#27;[22m&amp#27;[39m                                     &amp#27;[90m# com.example.steps.CalculadoraSteps.numero2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                   &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mel resultado mostrado debe ser &amp#27;[1m"18"&amp#27;[22m&amp#27;[39m                        &amp#27;[90m# com.example.steps.CalculadoraSteps.el_resultado_mostrado_debe_ser(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Suma simple con resultado en base 2" classname="Suma de dos valores ingresados" time="0.006">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Suma simple con resultado en base 2     &amp#27;[90m# classpath:features/suma.feature:14&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere sumar dos números&amp#27;[39m   &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_sumar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel número 1 es &amp#27;[1m"7"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m           &amp#27;[90m# com.example.steps.CalculadoraSteps.numero1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel número 2 es &amp#27;[1m"1"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                &amp#27;[90m# com.example.steps.CalculadoraSteps.numero2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m2&amp#27;[22m&amp#27;[39m               &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mel resultado mostrado debe ser &amp#27;[1m"1000"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.el_resultado_mostrado_debe_ser(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por base de entrada fuera de rango" classname="Suma de dos valores ingresados" time="0.006">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por base de entrada fuera de rango                                        &amp#27;[90m# classpath:features/suma.feature:21&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere sumar dos números&amp#27;[39m                                             &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_sumar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel número 1 es &amp#27;[1m"12"&amp#27;[22m en base &amp#27;[1m11&amp#27;[22m&amp#27;[39m                                                    &amp#27;[90m# com.example.steps.CalculadoraSteps.numero1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel número 2 es &amp#27;[1m"5"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                          &amp#27;[90m# com.example.steps.CalculadoraSteps.numero2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base debe estar en el rango de 2 a 10."&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por dígito no válido para la base" classname="Suma de dos valores ingresados" time="0.005">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por dígito no válido para la base                                         &amp#27;[90m# classpath:features/suma.feature:28&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere sumar dos números&amp#27;[39m                                             &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_sumar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel número 1 es &amp#27;[1m"21"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m                                                     &amp#27;[90m# com.example.steps.CalculadoraSteps.numero1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel número 2 es &amp#27;[1m"10"&amp#27;[22m en base &amp#27;[1m2&amp#27;[22m&amp#27;[39m                                                          &amp#27;[90m# com.example.steps.CalculadoraSteps.numero2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                        &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"El dígito '2' no es válido para la base 2"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="Rechazo por base de salida fuera de rango" classname="Suma de dos valores ingresados" time="0.006">
    <system-out><![CDATA[
&amp#27;[1mEscenario:&amp#27;[22m Rechazo por base de salida fuera de rango                                               &amp#27;[90m# classpath:features/suma.feature:35&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mDado &amp#27;[22mque el usuario quiere sumar dos números&amp#27;[39m                                                   &amp#27;[90m# com.example.steps.CalculadoraSteps.usuario_quiere_sumar()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mCuando &amp#27;[22mel número 1 es &amp#27;[1m"10"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                          &amp#27;[90m# com.example.steps.CalculadoraSteps.numero1_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mel número 2 es &amp#27;[1m"20"&amp#27;[22m en base &amp#27;[1m10&amp#27;[22m&amp#27;[39m                                                               &amp#27;[90m# com.example.steps.CalculadoraSteps.numero2_es_en_base(java.lang.String,int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mY &amp#27;[22mla base de salida elegida es &amp#27;[1m1&amp#27;[22m&amp#27;[39m                                                               &amp#27;[90m# com.example.steps.CalculadoraSteps.la_base_de_salida_es(int)&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mEntonces &amp#27;[22mse debe mostrar un mensaje de error &amp#27;[1m"La base de salida 1 está fuera del rango [2-10]"&amp#27;[22m&amp#27;[39m &amp#27;[90m# com.example.steps.CalculadoraSteps.se_debe_mostrar_un_mensaje_de_error(java.lang.String)&amp#27;[39m
]]></system-out>
  </testcase>
</testsuite>